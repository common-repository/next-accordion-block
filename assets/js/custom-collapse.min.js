!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory(require("@popperjs/core")):"function"==typeof define&&define.amd?define(["@popperjs/core"],factory):(global="undefined"!=typeof globalThis?globalThis:global||self).bootstrap=factory(global.Popper)}(this,(function(Popper){"use strict";function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach((function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}})),n.default=e,Object.freeze(n)}var Popper__namespace=_interopNamespace(Popper);const NODE_TEXT=3,SelectorEngine={find:(selector,element=document.documentElement)=>[].concat(...Element.prototype.querySelectorAll.call(element,selector)),findOne:(selector,element=document.documentElement)=>Element.prototype.querySelector.call(element,selector),children:(element,selector)=>[].concat(...element.children).filter(child=>child.matches(selector)),parents(element,selector){const parents=[];let ancestor=element.parentNode;for(;ancestor&&ancestor.nodeType===Node.ELEMENT_NODE&&3!==ancestor.nodeType;)ancestor.matches(selector)&&parents.push(ancestor),ancestor=ancestor.parentNode;return parents},prev(element,selector){let previous=element.previousElementSibling;for(;previous;){if(previous.matches(selector))return[previous];previous=previous.previousElementSibling}return[]},next(element,selector){let next=element.nextElementSibling;for(;next;){if(next.matches(selector))return[next];next=next.nextElementSibling}return[]}},MAX_UID=1e6,MILLISECONDS_MULTIPLIER=1e3,TRANSITION_END="transitionend",toType=obj=>null==obj?`${obj}`:{}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase(),getUID=prefix=>{do{prefix+=Math.floor(1e6*Math.random())}while(document.getElementById(prefix));return prefix},getSelector=element=>{let selector=element.getAttribute("data-bs-target");if(!selector||"#"===selector){let hrefAttr=element.getAttribute("href");if(!hrefAttr||!hrefAttr.includes("#")&&!hrefAttr.startsWith("."))return null;hrefAttr.includes("#")&&!hrefAttr.startsWith("#")&&(hrefAttr=`#${hrefAttr.split("#")[1]}`),selector=hrefAttr&&"#"!==hrefAttr?hrefAttr.trim():null}return selector},getSelectorFromElement=element=>{const selector=getSelector(element);return selector&&document.querySelector(selector)?selector:null},getElementFromSelector=element=>{const selector=getSelector(element);return selector?document.querySelector(selector):null},getTransitionDurationFromElement=element=>{if(!element)return 0;let{transitionDuration:transitionDuration,transitionDelay:transitionDelay}=window.getComputedStyle(element);const floatTransitionDuration=Number.parseFloat(transitionDuration),floatTransitionDelay=Number.parseFloat(transitionDelay);return floatTransitionDuration||floatTransitionDelay?(transitionDuration=transitionDuration.split(",")[0],transitionDelay=transitionDelay.split(",")[0],1e3*(Number.parseFloat(transitionDuration)+Number.parseFloat(transitionDelay))):0},triggerTransitionEnd=element=>{element.dispatchEvent(new Event(TRANSITION_END))},isElement=obj=>!(!obj||"object"!=typeof obj)&&(void 0!==obj.jquery&&(obj=obj[0]),void 0!==obj.nodeType),getElement=obj=>isElement(obj)?obj.jquery?obj[0]:obj:"string"==typeof obj&&obj.length>0?SelectorEngine.findOne(obj):null,typeCheckConfig=(componentName,config,configTypes)=>{Object.keys(configTypes).forEach(property=>{const expectedTypes=configTypes[property],value=config[property],valueType=value&&isElement(value)?"element":toType(value);if(!new RegExp(expectedTypes).test(valueType))throw new TypeError(`${componentName.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`)})},isVisible=element=>!(!isElement(element)||0===element.getClientRects().length)&&"visible"===getComputedStyle(element).getPropertyValue("visibility"),isDisabled=element=>!element||element.nodeType!==Node.ELEMENT_NODE||(!!element.classList.contains("disabled")||(void 0!==element.disabled?element.disabled:element.hasAttribute("disabled")&&"false"!==element.getAttribute("disabled"))),findShadowRoot=element=>{if(!document.documentElement.attachShadow)return null;if("function"==typeof element.getRootNode){const root=element.getRootNode();return root instanceof ShadowRoot?root:null}return element instanceof ShadowRoot?element:element.parentNode?findShadowRoot(element.parentNode):null},noop=()=>{},reflow=element=>element.offsetHeight,getjQuery=()=>{const{jQuery:jQuery}=window;return jQuery&&!document.body.hasAttribute("data-bs-no-jquery")?jQuery:null},DOMContentLoadedCallbacks=[],onDOMContentLoaded=callback=>{"loading"===document.readyState?(DOMContentLoadedCallbacks.length||document.addEventListener("DOMContentLoaded",()=>{DOMContentLoadedCallbacks.forEach(callback=>callback())}),DOMContentLoadedCallbacks.push(callback)):callback()},isRTL=()=>"rtl"===document.documentElement.dir,defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME,JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface,$.fn[name].Constructor=plugin,$.fn[name].noConflict=()=>($.fn[name]=JQUERY_NO_CONFLICT,plugin.jQueryInterface)}})},execute=callback=>{"function"==typeof callback&&callback()},executeAfterTransition=(callback,transitionElement,waitForTransition=!0)=>{if(!waitForTransition)return void execute(callback);const durationPadding=5,emulatedDuration=getTransitionDurationFromElement(transitionElement)+5;let called=!1;const handler=({target:target})=>{target===transitionElement&&(called=!0,transitionElement.removeEventListener(TRANSITION_END,handler),execute(callback))};transitionElement.addEventListener(TRANSITION_END,handler),setTimeout(()=>{called||triggerTransitionEnd(transitionElement)},emulatedDuration)},getNextActiveElement=(list,activeElement,shouldGetNext,isCycleAllowed)=>{let index=list.indexOf(activeElement);if(-1===index)return list[!shouldGetNext&&isCycleAllowed?list.length-1:0];const listLength=list.length;return index+=shouldGetNext?1:-1,isCycleAllowed&&(index=(index+listLength)%listLength),list[Math.max(0,Math.min(index,listLength-1))]},namespaceRegex=/[^.]*(?=\..*)\.|.*/,stripNameRegex=/\..*/,stripUidRegex=/::\d+$/,eventRegistry={};let uidEvent=1;const customEvents={mouseenter:"mouseover",mouseleave:"mouseout"},customEventsRegex=/^(mouseenter|mouseleave)/i,nativeEvents=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function getUidEvent(element,uid){return uid&&`${uid}::${uidEvent++}`||element.uidEvent||uidEvent++}function getEvent(element){const uid=getUidEvent(element);return element.uidEvent=uid,eventRegistry[uid]=eventRegistry[uid]||{},eventRegistry[uid]}function bootstrapHandler(element,fn){return function handler(event){return event.delegateTarget=element,handler.oneOff&&EventHandler.off(element,event.type,fn),fn.apply(element,[event])}}function bootstrapDelegationHandler(element,selector,fn){return function handler(event){const domElements=element.querySelectorAll(selector);for(let{target:target}=event;target&&target!==this;target=target.parentNode)for(let i=domElements.length;i--;)if(domElements[i]===target)return event.delegateTarget=target,handler.oneOff&&EventHandler.off(element,event.type,selector,fn),fn.apply(target,[event]);return null}}function findHandler(events,handler,delegationSelector=null){const uidEventList=Object.keys(events);for(let i=0,len=uidEventList.length;i<len;i++){const event=events[uidEventList[i]];if(event.originalHandler===handler&&event.delegationSelector===delegationSelector)return event}return null}function normalizeParams(originalTypeEvent,handler,delegationFn){const delegation="string"==typeof handler,originalHandler=delegation?delegationFn:handler;let typeEvent=getTypeEvent(originalTypeEvent);const isNative=nativeEvents.has(typeEvent);return isNative||(typeEvent=originalTypeEvent),[delegation,originalHandler,typeEvent]}function addHandler(element,originalTypeEvent,handler,delegationFn,oneOff){if("string"!=typeof originalTypeEvent||!element)return;if(handler||(handler=delegationFn,delegationFn=null),customEventsRegex.test(originalTypeEvent)){const wrapFn=fn=>function(event){if(!event.relatedTarget||event.relatedTarget!==event.delegateTarget&&!event.delegateTarget.contains(event.relatedTarget))return fn.call(this,event)};delegationFn?delegationFn=wrapFn(delegationFn):handler=wrapFn(handler)}const[delegation,originalHandler,typeEvent]=normalizeParams(originalTypeEvent,handler,delegationFn),events=getEvent(element),handlers=events[typeEvent]||(events[typeEvent]={}),previousFn=findHandler(handlers,originalHandler,delegation?handler:null);if(previousFn)return void(previousFn.oneOff=previousFn.oneOff&&oneOff);const uid=getUidEvent(originalHandler,originalTypeEvent.replace(namespaceRegex,"")),fn=delegation?bootstrapDelegationHandler(element,handler,delegationFn):bootstrapHandler(element,handler);fn.delegationSelector=delegation?handler:null,fn.originalHandler=originalHandler,fn.oneOff=oneOff,fn.uidEvent=uid,handlers[uid]=fn,element.addEventListener(typeEvent,fn,delegation)}function removeHandler(element,events,typeEvent,handler,delegationSelector){const fn=findHandler(events[typeEvent],handler,delegationSelector);fn&&(element.removeEventListener(typeEvent,fn,Boolean(delegationSelector)),delete events[typeEvent][fn.uidEvent])}function removeNamespacedHandlers(element,events,typeEvent,namespace){const storeElementEvent=events[typeEvent]||{};Object.keys(storeElementEvent).forEach(handlerKey=>{if(handlerKey.includes(namespace)){const event=storeElementEvent[handlerKey];removeHandler(element,events,typeEvent,event.originalHandler,event.delegationSelector)}})}function getTypeEvent(event){return event=event.replace(stripNameRegex,""),customEvents[event]||event}const EventHandler={on(element,event,handler,delegationFn){addHandler(element,event,handler,delegationFn,!1)},one(element,event,handler,delegationFn){addHandler(element,event,handler,delegationFn,!0)},off(element,originalTypeEvent,handler,delegationFn){if("string"!=typeof originalTypeEvent||!element)return;const[delegation,originalHandler,typeEvent]=normalizeParams(originalTypeEvent,handler,delegationFn),inNamespace=typeEvent!==originalTypeEvent,events=getEvent(element),isNamespace=originalTypeEvent.startsWith(".");if(void 0!==originalHandler){if(!events||!events[typeEvent])return;return void removeHandler(element,events,typeEvent,originalHandler,delegation?handler:null)}isNamespace&&Object.keys(events).forEach(elementEvent=>{removeNamespacedHandlers(element,events,elementEvent,originalTypeEvent.slice(1))});const storeElementEvent=events[typeEvent]||{};Object.keys(storeElementEvent).forEach(keyHandlers=>{const handlerKey=keyHandlers.replace(stripUidRegex,"");if(!inNamespace||originalTypeEvent.includes(handlerKey)){const event=storeElementEvent[keyHandlers];removeHandler(element,events,typeEvent,event.originalHandler,event.delegationSelector)}})},trigger(element,event,args){if("string"!=typeof event||!element)return null;const $=getjQuery(),typeEvent=getTypeEvent(event),inNamespace=event!==typeEvent,isNative=nativeEvents.has(typeEvent);let jQueryEvent,bubbles=!0,nativeDispatch=!0,defaultPrevented=!1,evt=null;return inNamespace&&$&&(jQueryEvent=$.Event(event,args),$(element).trigger(jQueryEvent),bubbles=!jQueryEvent.isPropagationStopped(),nativeDispatch=!jQueryEvent.isImmediatePropagationStopped(),defaultPrevented=jQueryEvent.isDefaultPrevented()),isNative?(evt=document.createEvent("HTMLEvents"),evt.initEvent(typeEvent,bubbles,!0)):evt=new CustomEvent(event,{bubbles:bubbles,cancelable:!0}),void 0!==args&&Object.keys(args).forEach(key=>{Object.defineProperty(evt,key,{get:()=>args[key]})}),defaultPrevented&&evt.preventDefault(),nativeDispatch&&element.dispatchEvent(evt),evt.defaultPrevented&&void 0!==jQueryEvent&&jQueryEvent.preventDefault(),evt}},elementMap=new Map;var Data={set(element,key,instance){elementMap.has(element)||elementMap.set(element,new Map);const instanceMap=elementMap.get(element);instanceMap.has(key)||0===instanceMap.size?instanceMap.set(key,instance):console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`)},get:(element,key)=>elementMap.has(element)&&elementMap.get(element).get(key)||null,remove(element,key){if(!elementMap.has(element))return;const instanceMap=elementMap.get(element);instanceMap.delete(key),0===instanceMap.size&&elementMap.delete(element)}};const VERSION="5.0.2";class BaseComponent{constructor(element){(element=getElement(element))&&(this._element=element,Data.set(this._element,this.constructor.DATA_KEY,this))}dispose(){Data.remove(this._element,this.constructor.DATA_KEY),EventHandler.off(this._element,this.constructor.EVENT_KEY),Object.getOwnPropertyNames(this).forEach(propertyName=>{this[propertyName]=null})}_queueCallback(callback,element,isAnimated=!0){executeAfterTransition(callback,element,isAnimated)}static getInstance(element){return Data.get(element,this.DATA_KEY)}static getOrCreateInstance(element,config={}){return this.getInstance(element)||new this(element,"object"==typeof config?config:null)}static get VERSION(){return"5.0.2"}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}static get DATA_KEY(){return`bs.${this.NAME}`}static get EVENT_KEY(){return`.${this.DATA_KEY}`}}function normalizeData(val){return"true"===val||"false"!==val&&(val===Number(val).toString()?Number(val):""===val||"null"===val?null:val)}function normalizeDataKey(key){return key.replace(/[A-Z]/g,chr=>`-${chr.toLowerCase()}`)}const Manipulator={setDataAttribute(element,key,value){element.setAttribute(`data-bs-${normalizeDataKey(key)}`,value)},removeDataAttribute(element,key){element.removeAttribute(`data-bs-${normalizeDataKey(key)}`)},getDataAttributes(element){if(!element)return{};const attributes={};return Object.keys(element.dataset).filter(key=>key.startsWith("bs")).forEach(key=>{let pureKey=key.replace(/^bs/,"");pureKey=pureKey.charAt(0).toLowerCase()+pureKey.slice(1,pureKey.length),attributes[pureKey]=normalizeData(element.dataset[key])}),attributes},getDataAttribute:(element,key)=>normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`)),offset(element){const rect=element.getBoundingClientRect();return{top:rect.top+document.body.scrollTop,left:rect.left+document.body.scrollLeft}},position:element=>({top:element.offsetTop,left:element.offsetLeft})},NAME$9="collapse",DATA_KEY$8="bs.collapse",EVENT_KEY$8=".bs.collapse",DATA_API_KEY$5=".data-api",Default$8={toggle:!0,parent:""},DefaultType$8={toggle:"boolean",parent:"(string|element)"},EVENT_SHOW$5="show.bs.collapse",EVENT_SHOWN$5="shown.bs.collapse",EVENT_HIDE$5="hide.bs.collapse",EVENT_HIDDEN$5="hidden.bs.collapse",EVENT_CLICK_DATA_API$4="click.bs.collapse.data-api",CLASS_NAME_SHOW$8="show",CLASS_NAME_COLLAPSE="collapse",CLASS_NAME_COLLAPSING="collapsing",CLASS_NAME_COLLAPSED="collapsed",WIDTH="width",HEIGHT="height",SELECTOR_ACTIVES=".show, .collapsing",SELECTOR_DATA_TOGGLE$4='[data-bs-toggle="collapse"]';class Collapse extends BaseComponent{constructor(element,config){super(element),this._isTransitioning=!1,this._config=this._getConfig(config),this._triggerArray=SelectorEngine.find(`${SELECTOR_DATA_TOGGLE$4}[href="#${this._element.id}"],`+`${SELECTOR_DATA_TOGGLE$4}[data-bs-target="#${this._element.id}"]`);const toggleList=SelectorEngine.find(SELECTOR_DATA_TOGGLE$4);for(let i=0,len=toggleList.length;i<len;i++){const elem=toggleList[i],selector=getSelectorFromElement(elem),filterElement=SelectorEngine.find(selector).filter(foundElem=>foundElem===this._element);null!==selector&&filterElement.length&&(this._selector=selector,this._triggerArray.push(elem))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}static get Default(){return Default$8}static get NAME(){return NAME$9}toggle(){this._element.classList.contains("show")?this.hide():this.show()}show(){if(this._isTransitioning||this._element.classList.contains("show"))return;let actives,activesData;this._parent&&(actives=SelectorEngine.find(SELECTOR_ACTIVES,this._parent).filter(elem=>"string"==typeof this._config.parent?elem.getAttribute("data-bs-parent")===this._config.parent:elem.classList.contains("collapse")),0===actives.length&&(actives=null));const container=SelectorEngine.findOne(this._selector);if(actives){const tempActiveData=actives.find(elem=>container!==elem);if(activesData=tempActiveData?Collapse.getInstance(tempActiveData):null,activesData&&activesData._isTransitioning)return}const startEvent=EventHandler.trigger(this._element,EVENT_SHOW$5);if(startEvent.defaultPrevented)return;actives&&actives.forEach(elemActive=>{container!==elemActive&&Collapse.collapseInterface(elemActive,"hide"),activesData||Data.set(elemActive,DATA_KEY$8,null)});const dimension=this._getDimension();this._element.classList.remove("collapse"),this._element.classList.add("collapsing"),this._element.style[dimension]=0,this._triggerArray.length&&this._triggerArray.forEach(element=>{element.classList.remove("collapsed"),element.setAttribute("aria-expanded",!0)}),this.setTransitioning(!0);const complete=()=>{this._element.classList.remove("collapsing"),this._element.classList.add("collapse","show"),this._element.style[dimension]="",this.setTransitioning(!1),EventHandler.trigger(this._element,EVENT_SHOWN$5)},capitalizedDimension=dimension[0].toUpperCase()+dimension.slice(1),scrollSize=`scroll${capitalizedDimension}`;this._queueCallback(complete,this._element,!0),this._element.style[dimension]=`${this._element[scrollSize]}px`}hide(){if(this._isTransitioning||!this._element.classList.contains("show"))return;const startEvent=EventHandler.trigger(this._element,EVENT_HIDE$5);if(startEvent.defaultPrevented)return;const dimension=this._getDimension();this._element.style[dimension]=`${this._element.getBoundingClientRect()[dimension]}px`,reflow(this._element),this._element.classList.add("collapsing"),this._element.classList.remove("collapse","show");const triggerArrayLength=this._triggerArray.length;if(triggerArrayLength>0)for(let i=0;i<triggerArrayLength;i++){const trigger=this._triggerArray[i],elem=getElementFromSelector(trigger);elem&&!elem.classList.contains("show")&&(trigger.classList.add("collapsed"),trigger.setAttribute("aria-expanded",!1))}this.setTransitioning(!0);const complete=()=>{this.setTransitioning(!1),this._element.classList.remove("collapsing"),this._element.classList.add("collapse"),EventHandler.trigger(this._element,EVENT_HIDDEN$5)};this._element.style[dimension]="",this._queueCallback(complete,this._element,!0)}setTransitioning(isTransitioning){this._isTransitioning=isTransitioning}_getConfig(config){return(config={...Default$8,...config}).toggle=Boolean(config.toggle),typeCheckConfig(NAME$9,config,DefaultType$8),config}_getDimension(){return this._element.classList.contains(WIDTH)?WIDTH:HEIGHT}_getParent(){let{parent:parent}=this._config;parent=getElement(parent);const selector=`${SELECTOR_DATA_TOGGLE$4}[data-bs-parent="${parent}"]`;return SelectorEngine.find(selector,parent).forEach(element=>{const selected=getElementFromSelector(element);this._addAriaAndCollapsedClass(selected,[element])}),parent}_addAriaAndCollapsedClass(element,triggerArray){if(!element||!triggerArray.length)return;const isOpen=element.classList.contains("show");triggerArray.forEach(elem=>{isOpen?elem.classList.remove("collapsed"):elem.classList.add("collapsed"),elem.setAttribute("aria-expanded",isOpen)})}static collapseInterface(element,config){let data=Collapse.getInstance(element);const _config={...Default$8,...Manipulator.getDataAttributes(element),..."object"==typeof config&&config?config:{}};if(!data&&_config.toggle&&"string"==typeof config&&/show|hide/.test(config)&&(_config.toggle=!1),data||(data=new Collapse(element,_config)),"string"==typeof config){if(void 0===data[config])throw new TypeError(`No method named "${config}"`);data[config]()}}static jQueryInterface(config){return this.each((function(){Collapse.collapseInterface(this,config)}))}}EventHandler.on(document,EVENT_CLICK_DATA_API$4,SELECTOR_DATA_TOGGLE$4,(function(event){("A"===event.target.tagName||event.delegateTarget&&"A"===event.delegateTarget.tagName)&&event.preventDefault();const triggerData=Manipulator.getDataAttributes(this),selector=getSelectorFromElement(this),selectorElements=SelectorEngine.find(selector);selectorElements.forEach(element=>{const data=Collapse.getInstance(element);let config;data?(null===data._parent&&"string"==typeof triggerData.parent&&(data._config.parent=triggerData.parent,data._parent=data._getParent()),config="toggle"):config=triggerData,Collapse.collapseInterface(element,config)})})),defineJQueryPlugin(Collapse)}));